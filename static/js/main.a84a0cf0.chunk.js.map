{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","addContact","setState","handleChange","target","value","className","styles","contactForm","onSubmit","this","contactLabel","contactInput","type","onChange","contactSubmit","Component","ContactListItem","onRemoveContact","item","button","onClick","ContactList","contacts","map","id","key","Filter","onChangeFilter","label","input","App","filter","checkOnExist","find","contact","checkLength","string","length","uuid","alert","prevState","removeContact","contactId","changeFilter","getFilteredContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a84a0cf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__HI5GB\",\"contactLabel\":\"ContactForm_contactLabel__2oDo4\",\"contactInput\":\"ContactForm_contactInput__3tHQL\",\"contactSubmit\":\"ContactForm_contactSubmit__U5-Vc\"};","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\"\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.addContact({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.contactLabel}>\r\n          Name\r\n          <input className={styles.contactInput}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n       \r\n        <label className={styles.contactLabel}>\r\n          Number\r\n          <input className={styles.contactInput}\r\n            type=\"number\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        \r\n        <button  className={styles.contactSubmit} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\"\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className=\"TaskList-text\">\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  onRemoveContact: propTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport propTypes from \"prop-types\";\r\n\r\nconst ContactList = ({contacts, onRemoveContact}) => (\r\n  <ul className=\"Contact\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemoveContact={()=>onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes= {\r\n  contacts: propTypes.arrayOf(propTypes.exact({\r\n    id: propTypes.string.isRequired,\r\n    name: propTypes.string.isRequired,\r\n    number: propTypes.string.isRequired\r\n  })),\r\n  onRemoveContact: propTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport propTypes from \"prop-types\"\r\nimport styles from \"./Filter.module.css\"\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input \r\n          type=\"text\"\r\n          className={styles.input}\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes={\r\n  value: propTypes.string.isRequired,\r\n  onChangeFilter: propTypes.func.isRequired\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\"\r\n  };\r\n\r\n  componentDidMount(){\r\n    const persistedContacts = localStorage.getItem('contacts');\r\n    if (persistedContacts){\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const checkOnExist = this.state.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n\r\n    const checkLength = string => string.length < 1;\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    };\r\n\r\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\r\n      alert(\"Please, fill in all required entry fields\");\r\n      return;\r\n    }\r\n\r\n    if (checkOnExist) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact]\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length >= 2 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onRemoveContact={this.removeContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1gGk-\",\"button\":\"ContactListItem_button__14mEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__PB5UT\",\"input\":\"Filter_input__2WBj5\"};"],"sourceRoot":""}